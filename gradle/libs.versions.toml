[versions]
# --- Gradle & Kotlin ---
agp = "8.4.1"  # Android Gradle Plugin - Upgraded for better compatibility
kotlin = "1.9.23" # Version de Kotlin (to align with AGP 8.3.0 and Compose compiler)

# --- AndroidX Core & Activity ---
coreKtx = "1.13.1" # Downgraded for AGP 8.4.1 compatibility
activityKtx = "1.10.1"
activityCompose = "1.10.1"
# appcompat = "1.7.0" # Décommentez si vous utilisez encore AppCompat directement

# --- Lifecycle ---
lifecycle = "2.7.0"  # Version commune pour les artefacts Lifecycle - Downgraded for AGP 8.4.1 compatibility

# --- Compose ---
composeBom = "2024.05.00" # Bill of Materials pour Jetpack Compose
# La version du compilateur Compose est généralement gérée par le plugin org.jetbrains.kotlin.plugin.compose et la version de Kotlin.
# Si vous avez besoin de la forcer (rare), vous pourriez ajouter :
kotlinCompilerExtensionVersion = "1.5.11" # Aligned with Kotlin 1.9.23 compatibility
composeFoundation = "1.8.2" # Version spécifique pour androidx.compose.foundation:foundation si le BOM ne suffit pas
# composeMaterialIconsExtended = "1.8.0-beta01" # Pour les icônes Material étendues - Let BOM manage

# --- Android TV ---
tvFoundation = "1.0.0-alpha10"
tvMaterial = "1.0.0-alpha10"       # Pour androidx.tv:tv-material (ou androidx.tv.material3:material3 si vous visez cela)
leanback = "1.0.0"         # Si vous utilisez des composants Leanback classiques

# --- Navigation ---
navigationCompose = "2.7.7" # For androidx.navigation:navigation-compose - Downgraded for AGP 8.4.1 compatibility
hiltNavigationCompose = "1.2.0" # For androidx.hilt:hilt-navigation-compose - Updated to a more stable version

# --- Hilt (Dependency Injection) ---
hilt = "2.51.1"            # Pour com.google.dagger:hilt-android (librairie) et le plugin Gradle
hiltExtCompiler = "1.2.0"  # Pour androidx.hilt:hilt-compiler (utilisé pour WorkManager, etc.)

# --- Networking ---
retrofit = "2.11.0"
retrofitConverterGson = "2.9.0" # Assurez-vous que cette version est compatible avec votre version de Retrofit
okhttp = "4.12.0"          # Ou une version 5.x si vous migrez vers OkHttp 5
ktor = "2.3.10"            # Pour Ktor client
kotlinxSerializationJson = "1.6.3" # Pour la sérialisation avec Kotlinx

# --- Image Loading ---
coilCompose = "2.6.0"      # Pour io.coil-kt:coil-compose
coilVideo = "2.6.0"        # Pour io.coil-kt:coil-video (si même version)

# --- Media3 (ExoPlayer) ---
media3 = "1.3.1"           # Version commune pour les modules Media3

# --- Bluetooth ---
# androidxBluetooth = "1.0.0-alphaXX" # Exemple, remplacez par la version et l'artefact réels si vous utilisez une lib AndroidX Bluetooth

# --- Database - Room ---
room = "2.6.1"

# --- Preferences DataStore ---
datastorePreferences = "1.1.1"

# --- Coroutines ---
kotlinxCoroutines = "1.8.0" # Version commune pour les artefacts kotlinx-coroutines

# --- Security ---
securityCrypto = "1.1.0-alpha06" # Ou "1.0.0" pour la version stable

# --- WorkManager ---
workRuntimeKtx = "2.9.0"
hiltWork = "1.2.0"         # Pour androidx.hilt:hilt-work (la dépendance runtime)

# --- Firebase ---
firebaseBom = "33.1.2"     # Bill of Materials pour Firebase (gère les versions des libs Firebase individuelles)
# Pas besoin de spécifier les versions pour firebase-analytics, firebase-crashlytics, etc., si le BOM est utilisé.

# --- Biometrics ---
biometric = "1.2.0-alpha05" # Pour androidx.biometric:biometric (ou "1.1.0" pour stable)

# --- Animation ---
lottieCompose = "6.4.0"

# --- Accompanist (Note: Beaucoup de bibliothèques Accompanist sont dépréciées ou intégrées dans Compose) ---
accompanistPermissions = "0.34.0"
accompanistSystemUiController = "0.34.0"

# --- Paging ---
paging = "3.3.0"           # Version commune pour Paging runtime et Compose

# --- Glance (App Widgets) ---
glance = "1.1.0"           # Pour glance-appwidget et glance-material3

# --- Testing ---
junit = "4.13.2"
mockitoCore = "5.11.0"
androidxArchCoreTesting = "2.2.0"
androidxTestExtJunit = "1.2.1"
androidxTestEspressoCore = "3.6.1"
# Les versions des bibliothèques de test Compose (ui-test-junit4, ui-test-manifest) sont gérées par le composeBom.


[libraries]
# --- AndroidX Core & Activity ---
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
# androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

# --- Lifecycle ---
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }

# --- Compose (le BOM gère les versions des modules Compose ci-dessous, sauf indication contraire) ---
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" } # Pour debugImplementation
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation", version.ref = "composeFoundation" } # Version explicite si vous ne voulez pas celle du BOM
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" } # Material Design 3 standard (géré par le BOM)
androidx-compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }

# --- Android TV ---
androidx-tv-foundation = { group = "androidx.tv", name = "tv-foundation", version.ref = "tvFoundation" }
androidx-tv-material = { group = "androidx.tv", name = "tv-material", version.ref = "tvMaterial" } 
androidx-leanback = { group = "androidx.leanback", name = "leanback", version.ref = "leanback" }
# androidx-leanback-preference = { group = "androidx.leanback", name = "leanback-preference", version.ref = "leanback" } # Si vous utilisez les préférences Leanback

# --- Navigation ---
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltNavigationCompose" }

# --- Hilt (Dependency Injection) ---
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" } # Pour Kapt (processeur d'annotations)
androidx-hilt-compiler = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "hiltExtCompiler" } # Pour Kapt (extensions Hilt comme WorkManager)

# --- Networking ---
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofitConverterGson" }
okhttp-core = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" } # Intercepteur de logs pour OkHttp
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

# --- Image Loading ---
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coilCompose" }
coil-video = { group = "io.coil-kt", name = "coil-video", version.ref = "coilVideo" } # Pour charger des images depuis des vidéos

# --- Media3 (ExoPlayer) ---
androidx-media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3" }
androidx-media3-exoplayer-dash = { group = "androidx.media3", name = "media3-exoplayer-dash", version.ref = "media3" }
androidx-media3-exoplayer-hls = { group = "androidx.media3", name = "media3-exoplayer-hls", version.ref = "media3" }
androidx-media3-ui = { group = "androidx.media3", name = "media3-ui", version.ref = "media3" } # Composants UI pour Media3
androidx-media3-session = { group = "androidx.media3", name = "media3-session", version.ref = "media3" } # Pour la gestion de session média
# androidx-media3-cast = { group = "androidx.media3", name = "media3-cast", version.ref = "media3" } # Si vous utilisez le Cast SDK

# --- Bluetooth ---
# androidx-bluetooth = { group = "androidx.bluetooth", name = "bluetooth", version.ref = "androidxBluetooth" } # Exemple

# --- Database - Room ---
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" } # Extensions Kotlin pour Room
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" } # Pour Kapt (processeur d'annotations)

# --- Preferences DataStore ---
androidx-datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastorePreferences" }

# --- Coroutines ---
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
# kotlinx-coroutines-play-services = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutines" } # Si vous utilisez des API Google Play Services avec Coroutines
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" } # Pour les tests

# --- Security ---
androidx-security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "securityCrypto" }

# --- WorkManager ---
androidx-work-runtime-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workRuntimeKtx" }
androidx-hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltWork" } # Pour l'intégration Hilt avec WorkManager

# --- Firebase (le BOM gère les versions, donc pas de .ref ici) ---
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" } # KTX pour Kotlin
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }
# firebase-performance = { group = "com.google.firebase", name = "firebase-perf-ktx" }
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging-ktx" }

# --- Biometrics ---
androidx-biometric = { group = "androidx.biometric", name = "biometric", version.ref = "biometric" }

# --- Animation ---
lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottieCompose" }

# --- Accompanist ---
accompanist-permissions = { group = "com.google.accompanist", name = "accompanist-permissions", version.ref = "accompanistPermissions" }
accompanist-systemuicontroller = { group = "com.google.accompanist", name = "accompanist-systemuicontroller", version.ref = "accompanistSystemUiController" }

# --- Paging ---
androidx-paging-runtime-ktx = { group = "androidx.paging", name = "paging-runtime-ktx", version.ref = "paging" }
androidx-paging-compose = { group = "androidx.paging", name = "paging-compose", version.ref = "paging" } # Pour l'intégration Paging avec Compose

# --- Glance (App Widgets) ---
androidx-glance-appwidget = { group = "androidx.glance", name = "glance-appwidget", version.ref = "glance" }
androidx-glance-material3 = { group = "androidx.glance", name = "glance-material3", version.ref = "glance" }

# --- Testing ---
junit = { group = "junit", name = "junit", version.ref = "junit" } # Pour testImplementation
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockitoCore" } # Pour testImplementation
androidx-arch-core-testing = { group = "androidx.arch.core", name = "core-testing", version.ref = "androidxArchCoreTesting" } # Pour tester LiveData, etc. (testImplementation)
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidxTestExtJunit" } # Pour androidTestImplementation
androidx-test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidxTestEspressoCore" } # Pour androidTestImplementation
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" } # Pour les tests Compose (androidTestImplementation, version via composeBom)
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" } # Pour les tests Compose (debugImplementation, version via composeBom)


[plugins]
# --- Plugins Gradle ---
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" } # Plugin du compilateur Compose
hilt-gradle-plugin = { id = "com.google.dagger.hilt.android", version.ref = "hilt" } # Plugin Hilt pour Gradle
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" } # Plugin pour Kotlinx Serialization

# Si vous utilisez d'autres plugins Firebase, ajoutez-les ici, par exemple :
# firebase-crashlytics-gradle = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsGradleVersion" } # Vous auriez besoin de firebaseCrashlyticsGradleVersion dans [versions]
# firebase-perf-gradle = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfGradleVersion" }
# google-services = { id = "com.google.gms.google-services", version.ref = "googleServicesVersion" }

# Plugin Kapt
# Il n'y a pas d'alias direct pour id("kotlin-kapt") via le catalogue de versions de la même manière que les autres plugins.
# Vous l'appliquez toujours directement dans votre build.gradle.kts : plugins { id("kotlin-kapt") }
